name: Release Workflow

run-name: "Releasing ${{ github.event.repository.name }} #${{github.run_number}}"

# Trigger workflow manually
on:
  workflow_dispatch:
    inputs:
      release_message:
        type: string
        description: "(Optional) Enter Release Message"

# Define environment parameters
env:
  BRANCH_NAME: ${{github.ref_name}}
  TRUNK_BRANCH_NAME: main
  RELEASE_MESSAGE: ${{github.event.inputs.release_message}}
  MAVEN_SETTING: '/home/ec2-user/maven/.m2/settings.xml'

# Define jobs within the workflow
jobs:
  initialization:
    if: github.repository_owner == 'ikmdev'
    runs-on: ubuntu-latest
    name: Initialization
    outputs:
      NEXT_SNAPSHOT_VERSION: ${{steps.nextSnapshotVersion.outputs.SnapshotVersion}}
      RELEASE_VERSION: ${{steps.splitCurrentVersion.outputs._0}}

    steps:
      - name: Verify Branch
        if: env.BRANCH_NAME != env.TRUNK_BRANCH_NAME
        run: |
          echo "ERROR: Attempting to release from branch ${{env.BRANCH_NAME}}. Release from ${{env.TRUNK_BRANCH_NAME}} branch only"
          exit 1

      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '21'

      - name: Get Current Version
        run: |
          echo "POM_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Print Version
        run: echo ${{env.POM_VERSION}}

      - name: Verify Is SNAPSHOT Version
        if: ${{ !contains(env.POM_VERSION, '-SNAPSHOT')}}
        run: |
          echo "ERROR: Version is set to incompatible version ${{env.POM_VERSION}}. Only SNAPSHOT development versions can be converted to a release version."
          exit 1

      - name: Split version code
        uses: xom9ikk/split@v1.1
        id: splitCurrentVersion
        with:
          string: ${{env.POM_VERSION}}
          separator: '-'
          limit: -1

      - name: Split version code - Separate By .
        uses: xom9ikk/split@v1.1
        id: splitVersionMinor
        with:
          string: ${{steps.splitCurrentVersion.outputs._0}}
          separator: .
          limit: -1

      - name: Increment Snapshot Version
        id: nextSnapshotVersion
        run: |
          echo "SnapshotVersion=${{steps.splitVersionMinor.outputs._0}}.$((${{steps.splitVersionMinor.outputs._1}} + 1)).${{steps.splitVersionMinor.outputs._2}}-SNAPSHOT" >> $GITHUB_OUTPUT

      - name: Print Information
        run: |
          echo "Release Version -- ${{steps.splitCurrentVersion.outputs._0}}"
          echo "Snapshot Version -- ${{steps.nextSnapshotVersion.outputs.SnapshotVersion}}"

  #Setting versioning for build and tags
  set_build_and_tag_release_and_set_next_dev_version:
    name: Set, Build, Tag Release Version & Set Next Version
    runs-on: self-hosted
    needs: initialization
    permissions:
      contents: write

    steps:
      - name: Setup Maven Action
        uses: s4u/setup-maven-action@v1.14.0
        with:
          checkout-fetch-depth: 0
          java-version: 21
          java-distribution: adopt
          maven-version: 3.9.0

      - name: Set Release Version
        run: |
          mvn -B versions:set \
          -s ${{env.MAVEN_SETTING}} \
          -DnewVersion=${{needs.initialization.outputs.RELEASE_VERSION}} \
          -DgenerateBackupPoms=false

      - name: Build Release Version
        run: |
          mvn -version
          mvn clean install \
                -s ${{env.MAVEN_SETTING}} \
                --batch-mode \
                -e \
                -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
                -PcodeQuality,release-enforcement

      - name: Create tag
        run: |
          git remote set-url origin https://git:${{secrets.GITHUB_TOKEN}}@github.com/${{github.repository}}.git
          git config user.name "Cloud User"
          git add .
          git commit -m 'Release ${{needs.initialization.outputs.RELEASE_VERSION}}'
          git tag -a ${{needs.initialization.outputs.RELEASE_VERSION}} -m '${{needs.initialization.outputs.RELEASE_VERSION}}' --force

      - name: Set Dev Version
        run: |
          mvn -B versions:set \
          -s ${{env.MAVEN_SETTING}} \
          -DnewVersion=${{needs.initialization.outputs.NEXT_SNAPSHOT_VERSION}} \
          -DgenerateBackupPoms=false

      - name: Commit & Push
        run: |
          git add .
          git commit -m 'Set next dev version to ${{needs.initialization.outputs.NEXT_SNAPSHOT_VERSION}}'
          git push origin HEAD:main
          git push --tags origin

  # Creating a release
  create_release:
    name: Create Release
    permissions: write-all

    needs:
      - initialization
      - set_build_and_tag_release_and_set_next_dev_version

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Modify Release Message
        if: env.RELEASE_MESSAGE == ''
        run: echo "RELEASE_MESSAGE=Release ${{needs.initialization.outputs.RELEASE_VERSION}}" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        run: |
          curl -L \
           -X POST \
           -H "Accept: application/vnd.github+json" \
           -H "Authorization: Bearer ${{secrets.GITHUB_TOKEN}}" \
           -H "X-GitHub-Api-Version: 2022-11-28" \
           https://api.github.com/repos/${{github.repository}}/releases \
          -d '{"tag_name":"${{needs.initialization.outputs.RELEASE_VERSION}}","name":"${{needs.initialization.outputs.RELEASE_VERSION}}","body":"${{env.RELEASE_MESSAGE}}","draft":false,"prerelease":false,"generate_release_notes":false}'


  publish-artifacts:
    name: Publishing Artifacts to Nexus & OSSRH
    runs-on: self-hosted
    needs:
        - initialization
        - create_release
    steps:
          - name: Setup Maven Action
            uses: s4u/setup-maven-action@v1.14.0
            with:
              checkout-fetch-depth: 0
              java-version: 21
              java-distribution: adopt
              maven-version: 3.9.0

          - name: Checkout Code Repository
            uses: actions/checkout@v4
            with:
                ref: ${{needs.initialization.outputs.RELEASE_VERSION}}

          - name: Maven Build
            run: |
              mvn clean install \
                -s ${{env.MAVEN_SETTING}} \
                --batch-mode \
                -e \
                -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
                -PcodeQuality

          - name: Deploy To Nexus
            run: |
              mvn deploy \
                    --batch-mode \
                    -e \
                    -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
                    -DskipTests \
                    -DskipITs \
                    -Dmaven.main.skip \
                    -Dmaven.test.skip \
                    -s ${{env.MAVEN_SETTING}} \
                    -DrepositoryId='maven-releases' \
                    -Dgpg.passphrase=${{secrets.SELF_HOSTED_GPG_PASSPHRASE}}
      
      
          - name: Publish To OSSRH (Maven Central Staging)
            run: |
                mvn deploy \
                    --batch-mode \
                    -e \
                    -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
                    -DskipTests \
                    -DskipITs \
                    -Dmaven.main.skip \
                    -Dmaven.test.skip \
                    -s ${{env.MAVEN_SETTING}} \
                    -DrepositoryId='maven-releases' \
                    -DrepositoryIdOSSRH='true' \
                    -PstageOSSRH -Dgpg.passphrase=${{secrets.SELF_HOSTED_GPG_PASSPHRASE}}
