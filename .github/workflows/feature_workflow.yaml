name: Feature Branch Workflow (NO PR)

run-name: ${{inputs.action}} -- feature/${{inputs.branch_name}}

on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: 'Enter the branch name without the "feature/" prefix'
        required: true
      action:
        description: 'Choose an action: start, finish, or resume'
        required: true
        type: choice
        options:
          - --Select--
          - Start
          - Finish
          - Resume
        default: --Select--

env:
  BRANCH_NAME: feature/${{inputs.branch_name}}

jobs:
  start_job:
    if: ${{ github.event.inputs.action == 'Start' }}
    runs-on: ubuntu-24.04

    permissions:
      contents: write

    steps:
      - name: Look for PR
        id: prLookup
        uses: ikmdev/maven-unique-feature-branch-action/.github/actions/js-pull-request-function@master
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          repository: ikmdev/${{github.event.repository.name}}
          branch_name: ${{env.BRANCH_NAME}}

      - name: Output from last step
        run: |
          echo Pull Request Exists: ${{steps.prLookup.outputs.pr_exists}}
          echo Pull Request URL: ${{steps.prLookup.outputs.pr_url}}
          echo Pull Request Number: ${{steps.prLookup.outputs.pr_number}}
          echo Pull Request HTML URL: ${{steps.prLookup.outputs.pr_html_url}}

      - name: Validation Step
        run: |
         echo $ACTION
         echo $PR_EXISTS
         if [ $ACTION === 'Start' ] && [ $PR_EXISTS === 'true' ]; then
            echo "PR for ${{env.BRANCH_NAME}} already exists - ${{steps.prLookup.outputs.pr_html_url}}"
            exit 1;
         elif [ $ACTION === 'Resume' || $ACTION === 'Finish' ]  && [ $PR_EXISTS === 'false' ];
            echo "PR does not exist for ${{env.BRANCH_NAME}}"
            echo "Please create PR"
            exit 1
         fi
        env:
          ACTION: ${{inputs.action}}
          PR_EXISTS: ${{steps.prLookup.outputs.pr_exists}}

      - name: Start -- Fail if PR Already Exists
        if : inputs.action == 'Start' && steps.prLookup.outputs.pr_exists == 'true'
        run: |
          echo "PR for ${{env.BRANCH_NAME}} already exists - ${{steps.prLookup.outputs.pr_html_url}}"
          exit 1

      - name: Resume/Finish - Fail if PR does not exist
        if: (inputs.action == 'Resume' || inputs.action == 'Finish') && steps.prLookup.outputs.pr_exists == 'false'
        run: |
          echo "PR does not exist for ${{env.BRANCH_NAME}}"
          echo "Please create PR"
          exit 1

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
  
        



      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Create or switch to branch
        run: |
          if git ls-remote --exit-code --heads origin "${{ env.BRANCH_NAME }}"; then
            git checkout "${{ env.BRANCH_NAME }}"
            echo "Checked out existing branch ${{ env.BRANCH_NAME }}"
          else
            git checkout -b "${{ env.BRANCH_NAME }}"
            echo "Created and checked out new branch ${{ env.BRANCH_NAME }}"
          fi

      - name: Modify Maven coordinate
        run: |

          # Extract the current version from pom.xml
          ORIGINAL_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Original version: $ORIGINAL_VERSION"
      
          # Remove '-SNAPSHOT' if present
          BASE_VERSION=${ORIGINAL_VERSION%-SNAPSHOT}
          echo "Base version: $BASE_VERSION"
      
          # Create new version with '-feature-branch_name-SNAPSHOT'
          NEW_VERSION="${BASE_VERSION}-feature-${{ github.event.inputs.branch_name }}-SNAPSHOT"
          echo "New version: $NEW_VERSION"
      
          # Update the version in pom.xml
          mvn versions:set -DnewVersion="$NEW_VERSION" -DgenerateBackupPoms=false -DprocessAllModules=true

      - name: Commit and push changes
        run: |
          git add pom.xml **/pom.xml
          git commit -m "[START] Update Maven coordinate for ${{ env.BRANCH_NAME }}"
          git push origin "${{ env.BRANCH_NAME }}"

  finish_job:
    if: ${{ github.event.inputs.action == 'finish' }}
    runs-on: ubuntu-24.04

    permissions:
      contents: write

    steps:
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Set up variables
        run: |
          echo "BRANCH_NAME=feature/${{ github.event.inputs.branch_name }}" >> $GITHUB_ENV
          echo "Set BRANCH_NAME to feature/${{ github.event.inputs.branch_name }}"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Checkout feature branch
        run: |
          git checkout "${{ env.BRANCH_NAME }}"
          echo "Checked out branch ${{ env.BRANCH_NAME }}"

      - name: Verify branch
        run: |
          git branch
          echo "Current branch: $(git rev-parse --abbrev-ref HEAD)"

      - name: Modify Maven coordinate
        run: |
          
          # Extract the current version from pom.xml
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Current version: $CURRENT_VERSION"
      
          # Remove '-feature-branch_name' from the version
          NEW_VERSION=$(echo "$CURRENT_VERSION" | sed "s/-feature-${{ github.event.inputs.branch_name }}//")
          echo "Reverted version: $NEW_VERSION"
      
          # Update the version in pom.xml
          mvn versions:set -DnewVersion="$NEW_VERSION" -DgenerateBackupPoms=false -DprocessAllModules=true

      - name: Commit and push changes
        run: |
          git add pom.xml **/pom.xml
          git commit -m "[FINISH] Revert Maven coordinate for ${{ env.BRANCH_NAME }}"
          git push origin "${{ env.BRANCH_NAME }}"

  resume_job:
    if: ${{ github.event.inputs.action == 'resume' }}
    runs-on: ubuntu-24.04
  
    permissions:
      contents: write
  
    steps:
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
  
      - name: Set up variables
        run: |
          echo "BRANCH_NAME=feature/${{ github.event.inputs.branch_name }}" >> $GITHUB_ENV
          echo "Set BRANCH_NAME to feature/${{ github.event.inputs.branch_name }}"
  
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
  
      - name: Configure Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
  
      - name: Checkout feature branch
        run: |
          git checkout "${{ env.BRANCH_NAME }}"

      - name: Modify Maven coordinate
        id: modify_maven_coordinate
        run: |
          
          # Extract the current version from pom.xml
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Current version: $CURRENT_VERSION"
      
          # Initialize version_changed to 'false'
          echo "version_changed=false" >> $GITHUB_OUTPUT
      
          # Expected new version pattern
          EXPECTED_SUFFIX="-feature-${{ github.event.inputs.branch_name }}-SNAPSHOT"
      
          # Check if version already includes '-feature-branch_name-SNAPSHOT'
          if [[ "$CURRENT_VERSION" != *"$EXPECTED_SUFFIX" ]]; then
          
            # Remove '-SNAPSHOT' if present
            BASE_VERSION=${CURRENT_VERSION%-SNAPSHOT}
            echo "Base version: $BASE_VERSION"
          
            # Remove existing '-feature-*' if present
            BASE_VERSION=${BASE_VERSION%-feature-*}
            echo "Base version after removing existing feature suffix: $BASE_VERSION"
            
            # Create new version with '-feature-branch_name-SNAPSHOT'
            NEW_VERSION="${BASE_VERSION%-feature-*}-feature-${{ github.event.inputs.branch_name }}-SNAPSHOT"
            echo "New version: $NEW_VERSION"
            
            # Update the version in pom.xml
            mvn versions:set -DnewVersion="$NEW_VERSION" -DgenerateBackupPoms=false -DprocessAllModules=true
            
            # Set output to indicate that version was changed
            echo "version_changed=true" >> $GITHUB_OUTPUT
          else
            echo "Version already includes '$EXPECTED_SUFFIX'"
          fi

      - name: Commit and push changes
        run: |
          git add pom.xml **/pom.xml
          if git diff-index --quiet HEAD --; then
            echo "No changes to commit"
          else
            git commit -m "[RESUME] Update Maven coordinate for ${{ env.BRANCH_NAME }}"
            git push origin "${{ env.BRANCH_NAME }}"
          fi
